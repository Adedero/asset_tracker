// This file was overwritten by prisma-json-types-generator
// Report any issues to https://github.com/arthurfiorette/prisma-json-types-generator
import type * as PJTG from "../pjtg";

/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `User` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library";
import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model User
 *
 */
export type UserModel = runtime.Types.Result.DefaultSelection<Prisma.$UserPayload>;

export type AggregateUser = {
  _count: UserCountAggregateOutputType | null;
  _min: UserMinAggregateOutputType | null;
  _max: UserMaxAggregateOutputType | null;
};

export type UserMinAggregateOutputType = {
  id: string | null;
  name: string | null;
  email: string | null;
  password: string | null;
  verified: boolean | null;
  role: $Enums.UserRole | null;
  accountGroupId: string | null;
  image: string | null;
  phoneNumber: string | null;
  address: string | null;
  country: string | null;
  region: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  isBanned: boolean | null;
};

export type UserMaxAggregateOutputType = {
  id: string | null;
  name: string | null;
  email: string | null;
  password: string | null;
  verified: boolean | null;
  role: $Enums.UserRole | null;
  accountGroupId: string | null;
  image: string | null;
  phoneNumber: string | null;
  address: string | null;
  country: string | null;
  region: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  isBanned: boolean | null;
};

export type UserCountAggregateOutputType = {
  id: number;
  name: number;
  email: number;
  password: number;
  verified: number;
  role: number;
  accountGroupId: number;
  image: number;
  phoneNumber: number;
  address: number;
  country: number;
  region: number;
  createdAt: number;
  updatedAt: number;
  ipAddresses: number;
  devices: number;
  isBanned: number;
  _all: number;
};

export type UserMinAggregateInputType = {
  id?: true;
  name?: true;
  email?: true;
  password?: true;
  verified?: true;
  role?: true;
  accountGroupId?: true;
  image?: true;
  phoneNumber?: true;
  address?: true;
  country?: true;
  region?: true;
  createdAt?: true;
  updatedAt?: true;
  isBanned?: true;
};

export type UserMaxAggregateInputType = {
  id?: true;
  name?: true;
  email?: true;
  password?: true;
  verified?: true;
  role?: true;
  accountGroupId?: true;
  image?: true;
  phoneNumber?: true;
  address?: true;
  country?: true;
  region?: true;
  createdAt?: true;
  updatedAt?: true;
  isBanned?: true;
};

export type UserCountAggregateInputType = {
  id?: true;
  name?: true;
  email?: true;
  password?: true;
  verified?: true;
  role?: true;
  accountGroupId?: true;
  image?: true;
  phoneNumber?: true;
  address?: true;
  country?: true;
  region?: true;
  createdAt?: true;
  updatedAt?: true;
  ipAddresses?: true;
  devices?: true;
  isBanned?: true;
  _all?: true;
};

export type UserAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which User to aggregate.
   */
  where?: Prisma.UserWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.UserWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Users.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Users
   **/
  _count?: true | UserCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: UserMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: UserMaxAggregateInputType;
};

export type GetUserAggregateType<T extends UserAggregateArgs> = {
  [P in keyof T & keyof AggregateUser]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUser[P]>
    : Prisma.GetScalarType<T[P], AggregateUser[P]>;
};

export type UserGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.UserWhereInput;
  orderBy?: Prisma.UserOrderByWithAggregationInput | Prisma.UserOrderByWithAggregationInput[];
  by: Prisma.UserScalarFieldEnum[] | Prisma.UserScalarFieldEnum;
  having?: Prisma.UserScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: UserCountAggregateInputType | true;
  _min?: UserMinAggregateInputType;
  _max?: UserMaxAggregateInputType;
};

export type UserGroupByOutputType = {
  id: string;
  name: string;
  email: string;
  password: string;
  verified: boolean;
  role: $Enums.UserRole;
  accountGroupId: string | null;
  image: string | null;
  phoneNumber: string | null;
  address: string | null;
  country: string | null;
  region: string | null;
  createdAt: Date;
  updatedAt: Date;
  ipAddresses: PrismaJson.IpAddresses | null;
  devices: unknown | null;
  isBanned: boolean | null;
  _count: UserCountAggregateOutputType | null;
  _min: UserMinAggregateOutputType | null;
  _max: UserMaxAggregateOutputType | null;
};

type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof UserGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>;
    }
  >
>;

export type UserWhereInput = {
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[];
  OR?: Prisma.UserWhereInput[];
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[];
  id?: Prisma.StringFilter<"User"> | string;
  name?: Prisma.StringFilter<"User"> | string;
  email?: Prisma.StringFilter<"User"> | string;
  password?: Prisma.StringFilter<"User"> | string;
  verified?: Prisma.BoolFilter<"User"> | boolean;
  role?: Prisma.EnumUserRoleFilter<"User"> | $Enums.UserRole;
  accountGroupId?: Prisma.StringNullableFilter<"User"> | string | null;
  image?: Prisma.StringNullableFilter<"User"> | string | null;
  phoneNumber?: Prisma.StringNullableFilter<"User"> | string | null;
  address?: Prisma.StringNullableFilter<"User"> | string | null;
  country?: Prisma.StringNullableFilter<"User"> | string | null;
  region?: Prisma.StringNullableFilter<"User"> | string | null;
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"User"> | Date | string;
  ipAddresses?: Prisma.JsonNullableFilter<"User">;
  devices?: Prisma.JsonNullableFilter<"User">;
  isBanned?: Prisma.BoolNullableFilter<"User"> | boolean | null;
  account?: Prisma.XOR<Prisma.AccountNullableScalarRelationFilter, Prisma.AccountWhereInput> | null;
  accountGroup?: Prisma.XOR<
    Prisma.AccountGroupNullableScalarRelationFilter,
    Prisma.AccountGroupWhereInput
  > | null;
  transactions?: Prisma.TransactionListRelationFilter;
  investments?: Prisma.InvestmentListRelationFilter;
  Notification?: Prisma.NotificationListRelationFilter;
  ban?: Prisma.XOR<Prisma.BanNullableScalarRelationFilter, Prisma.BanWhereInput> | null;
};

export type UserOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  password?: Prisma.SortOrder;
  verified?: Prisma.SortOrder;
  role?: Prisma.SortOrder;
  accountGroupId?: Prisma.SortOrderInput | Prisma.SortOrder;
  image?: Prisma.SortOrderInput | Prisma.SortOrder;
  phoneNumber?: Prisma.SortOrderInput | Prisma.SortOrder;
  address?: Prisma.SortOrderInput | Prisma.SortOrder;
  country?: Prisma.SortOrderInput | Prisma.SortOrder;
  region?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  ipAddresses?: Prisma.SortOrderInput | Prisma.SortOrder;
  devices?: Prisma.SortOrderInput | Prisma.SortOrder;
  isBanned?: Prisma.SortOrderInput | Prisma.SortOrder;
  account?: Prisma.AccountOrderByWithRelationInput;
  accountGroup?: Prisma.AccountGroupOrderByWithRelationInput;
  transactions?: Prisma.TransactionOrderByRelationAggregateInput;
  investments?: Prisma.InvestmentOrderByRelationAggregateInput;
  Notification?: Prisma.NotificationOrderByRelationAggregateInput;
  ban?: Prisma.BanOrderByWithRelationInput;
};

export type UserWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    email?: string;
    AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[];
    OR?: Prisma.UserWhereInput[];
    NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[];
    name?: Prisma.StringFilter<"User"> | string;
    password?: Prisma.StringFilter<"User"> | string;
    verified?: Prisma.BoolFilter<"User"> | boolean;
    role?: Prisma.EnumUserRoleFilter<"User"> | $Enums.UserRole;
    accountGroupId?: Prisma.StringNullableFilter<"User"> | string | null;
    image?: Prisma.StringNullableFilter<"User"> | string | null;
    phoneNumber?: Prisma.StringNullableFilter<"User"> | string | null;
    address?: Prisma.StringNullableFilter<"User"> | string | null;
    country?: Prisma.StringNullableFilter<"User"> | string | null;
    region?: Prisma.StringNullableFilter<"User"> | string | null;
    createdAt?: Prisma.DateTimeFilter<"User"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"User"> | Date | string;
    ipAddresses?: Prisma.JsonNullableFilter<"User">;
    devices?: Prisma.JsonNullableFilter<"User">;
    isBanned?: Prisma.BoolNullableFilter<"User"> | boolean | null;
    account?: Prisma.XOR<
      Prisma.AccountNullableScalarRelationFilter,
      Prisma.AccountWhereInput
    > | null;
    accountGroup?: Prisma.XOR<
      Prisma.AccountGroupNullableScalarRelationFilter,
      Prisma.AccountGroupWhereInput
    > | null;
    transactions?: Prisma.TransactionListRelationFilter;
    investments?: Prisma.InvestmentListRelationFilter;
    Notification?: Prisma.NotificationListRelationFilter;
    ban?: Prisma.XOR<Prisma.BanNullableScalarRelationFilter, Prisma.BanWhereInput> | null;
  },
  "id" | "email"
>;

export type UserOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  password?: Prisma.SortOrder;
  verified?: Prisma.SortOrder;
  role?: Prisma.SortOrder;
  accountGroupId?: Prisma.SortOrderInput | Prisma.SortOrder;
  image?: Prisma.SortOrderInput | Prisma.SortOrder;
  phoneNumber?: Prisma.SortOrderInput | Prisma.SortOrder;
  address?: Prisma.SortOrderInput | Prisma.SortOrder;
  country?: Prisma.SortOrderInput | Prisma.SortOrder;
  region?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  ipAddresses?: Prisma.SortOrderInput | Prisma.SortOrder;
  devices?: Prisma.SortOrderInput | Prisma.SortOrder;
  isBanned?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.UserCountOrderByAggregateInput;
  _max?: Prisma.UserMaxOrderByAggregateInput;
  _min?: Prisma.UserMinOrderByAggregateInput;
};

export type UserScalarWhereWithAggregatesInput = {
  AND?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[];
  OR?: Prisma.UserScalarWhereWithAggregatesInput[];
  NOT?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"User"> | string;
  name?: Prisma.StringWithAggregatesFilter<"User"> | string;
  email?: Prisma.StringWithAggregatesFilter<"User"> | string;
  password?: Prisma.StringWithAggregatesFilter<"User"> | string;
  verified?: Prisma.BoolWithAggregatesFilter<"User"> | boolean;
  role?: Prisma.EnumUserRoleWithAggregatesFilter<"User"> | $Enums.UserRole;
  accountGroupId?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null;
  image?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null;
  phoneNumber?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null;
  address?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null;
  country?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null;
  region?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string;
  ipAddresses?: Prisma.JsonNullableWithAggregatesFilter<"User">;
  devices?: Prisma.JsonNullableWithAggregatesFilter<"User">;
  isBanned?: Prisma.BoolNullableWithAggregatesFilter<"User"> | boolean | null;
};

export type UserCreateInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
  account?: Prisma.AccountCreateNestedOneWithoutUserInput;
  accountGroup?: Prisma.AccountGroupCreateNestedOneWithoutUsersInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutUserInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutUserInput;
  Notification?: Prisma.NotificationCreateNestedManyWithoutUserInput;
  ban?: Prisma.BanCreateNestedOneWithoutUserInput;
};

export type UserUncheckedCreateInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  accountGroupId?: string | null;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
  account?: Prisma.AccountUncheckedCreateNestedOneWithoutUserInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutUserInput;
  investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutUserInput;
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput;
  ban?: Prisma.BanUncheckedCreateNestedOneWithoutUserInput;
};

export type UserUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  account?: Prisma.AccountUpdateOneWithoutUserNestedInput;
  accountGroup?: Prisma.AccountGroupUpdateOneWithoutUsersNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutUserNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutUserNestedInput;
  Notification?: Prisma.NotificationUpdateManyWithoutUserNestedInput;
  ban?: Prisma.BanUpdateOneWithoutUserNestedInput;
};

export type UserUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  accountGroupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  account?: Prisma.AccountUncheckedUpdateOneWithoutUserNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutUserNestedInput;
  investments?: Prisma.InvestmentUncheckedUpdateManyWithoutUserNestedInput;
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput;
  ban?: Prisma.BanUncheckedUpdateOneWithoutUserNestedInput;
};

export type UserCreateManyInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  accountGroupId?: string | null;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
};

export type UserUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
};

export type UserUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  accountGroupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
};

export type UserCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  password?: Prisma.SortOrder;
  verified?: Prisma.SortOrder;
  role?: Prisma.SortOrder;
  accountGroupId?: Prisma.SortOrder;
  image?: Prisma.SortOrder;
  phoneNumber?: Prisma.SortOrder;
  address?: Prisma.SortOrder;
  country?: Prisma.SortOrder;
  region?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  ipAddresses?: Prisma.SortOrder;
  devices?: Prisma.SortOrder;
  isBanned?: Prisma.SortOrder;
};

export type UserMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  password?: Prisma.SortOrder;
  verified?: Prisma.SortOrder;
  role?: Prisma.SortOrder;
  accountGroupId?: Prisma.SortOrder;
  image?: Prisma.SortOrder;
  phoneNumber?: Prisma.SortOrder;
  address?: Prisma.SortOrder;
  country?: Prisma.SortOrder;
  region?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  isBanned?: Prisma.SortOrder;
};

export type UserMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  password?: Prisma.SortOrder;
  verified?: Prisma.SortOrder;
  role?: Prisma.SortOrder;
  accountGroupId?: Prisma.SortOrder;
  image?: Prisma.SortOrder;
  phoneNumber?: Prisma.SortOrder;
  address?: Prisma.SortOrder;
  country?: Prisma.SortOrder;
  region?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  isBanned?: Prisma.SortOrder;
};

export type UserScalarRelationFilter = {
  is?: Prisma.UserWhereInput;
  isNot?: Prisma.UserWhereInput;
};

export type UserListRelationFilter = {
  every?: Prisma.UserWhereInput;
  some?: Prisma.UserWhereInput;
  none?: Prisma.UserWhereInput;
};

export type UserOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type StringFieldUpdateOperationsInput = {
  set?: string;
};

export type BoolFieldUpdateOperationsInput = {
  set?: boolean;
};

export type EnumUserRoleFieldUpdateOperationsInput = {
  set?: $Enums.UserRole;
};

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null;
};

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string;
};

export type NullableBoolFieldUpdateOperationsInput = {
  set?: boolean | null;
};

export type UserCreateNestedOneWithoutAccountInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAccountInput,
    Prisma.UserUncheckedCreateWithoutAccountInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAccountInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutAccountNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAccountInput,
    Prisma.UserUncheckedCreateWithoutAccountInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAccountInput;
  upsert?: Prisma.UserUpsertWithoutAccountInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutAccountInput,
      Prisma.UserUpdateWithoutAccountInput
    >,
    Prisma.UserUncheckedUpdateWithoutAccountInput
  >;
};

export type UserCreateNestedManyWithoutAccountGroupInput = {
  create?:
    | Prisma.XOR<
        Prisma.UserCreateWithoutAccountGroupInput,
        Prisma.UserUncheckedCreateWithoutAccountGroupInput
      >
    | Prisma.UserCreateWithoutAccountGroupInput[]
    | Prisma.UserUncheckedCreateWithoutAccountGroupInput[];
  connectOrCreate?:
    | Prisma.UserCreateOrConnectWithoutAccountGroupInput
    | Prisma.UserCreateOrConnectWithoutAccountGroupInput[];
  createMany?: Prisma.UserCreateManyAccountGroupInputEnvelope;
  connect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
};

export type UserUncheckedCreateNestedManyWithoutAccountGroupInput = {
  create?:
    | Prisma.XOR<
        Prisma.UserCreateWithoutAccountGroupInput,
        Prisma.UserUncheckedCreateWithoutAccountGroupInput
      >
    | Prisma.UserCreateWithoutAccountGroupInput[]
    | Prisma.UserUncheckedCreateWithoutAccountGroupInput[];
  connectOrCreate?:
    | Prisma.UserCreateOrConnectWithoutAccountGroupInput
    | Prisma.UserCreateOrConnectWithoutAccountGroupInput[];
  createMany?: Prisma.UserCreateManyAccountGroupInputEnvelope;
  connect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
};

export type UserUpdateManyWithoutAccountGroupNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.UserCreateWithoutAccountGroupInput,
        Prisma.UserUncheckedCreateWithoutAccountGroupInput
      >
    | Prisma.UserCreateWithoutAccountGroupInput[]
    | Prisma.UserUncheckedCreateWithoutAccountGroupInput[];
  connectOrCreate?:
    | Prisma.UserCreateOrConnectWithoutAccountGroupInput
    | Prisma.UserCreateOrConnectWithoutAccountGroupInput[];
  upsert?:
    | Prisma.UserUpsertWithWhereUniqueWithoutAccountGroupInput
    | Prisma.UserUpsertWithWhereUniqueWithoutAccountGroupInput[];
  createMany?: Prisma.UserCreateManyAccountGroupInputEnvelope;
  set?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  disconnect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  delete?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  connect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  update?:
    | Prisma.UserUpdateWithWhereUniqueWithoutAccountGroupInput
    | Prisma.UserUpdateWithWhereUniqueWithoutAccountGroupInput[];
  updateMany?:
    | Prisma.UserUpdateManyWithWhereWithoutAccountGroupInput
    | Prisma.UserUpdateManyWithWhereWithoutAccountGroupInput[];
  deleteMany?: Prisma.UserScalarWhereInput | Prisma.UserScalarWhereInput[];
};

export type UserUncheckedUpdateManyWithoutAccountGroupNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.UserCreateWithoutAccountGroupInput,
        Prisma.UserUncheckedCreateWithoutAccountGroupInput
      >
    | Prisma.UserCreateWithoutAccountGroupInput[]
    | Prisma.UserUncheckedCreateWithoutAccountGroupInput[];
  connectOrCreate?:
    | Prisma.UserCreateOrConnectWithoutAccountGroupInput
    | Prisma.UserCreateOrConnectWithoutAccountGroupInput[];
  upsert?:
    | Prisma.UserUpsertWithWhereUniqueWithoutAccountGroupInput
    | Prisma.UserUpsertWithWhereUniqueWithoutAccountGroupInput[];
  createMany?: Prisma.UserCreateManyAccountGroupInputEnvelope;
  set?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  disconnect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  delete?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  connect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  update?:
    | Prisma.UserUpdateWithWhereUniqueWithoutAccountGroupInput
    | Prisma.UserUpdateWithWhereUniqueWithoutAccountGroupInput[];
  updateMany?:
    | Prisma.UserUpdateManyWithWhereWithoutAccountGroupInput
    | Prisma.UserUpdateManyWithWhereWithoutAccountGroupInput[];
  deleteMany?: Prisma.UserScalarWhereInput | Prisma.UserScalarWhereInput[];
};

export type UserCreateNestedOneWithoutInvestmentsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutInvestmentsInput,
    Prisma.UserUncheckedCreateWithoutInvestmentsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutInvestmentsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutInvestmentsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutInvestmentsInput,
    Prisma.UserUncheckedCreateWithoutInvestmentsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutInvestmentsInput;
  upsert?: Prisma.UserUpsertWithoutInvestmentsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutInvestmentsInput,
      Prisma.UserUpdateWithoutInvestmentsInput
    >,
    Prisma.UserUncheckedUpdateWithoutInvestmentsInput
  >;
};

export type UserCreateNestedOneWithoutTransactionsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionsInput,
    Prisma.UserUncheckedCreateWithoutTransactionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTransactionsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutTransactionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionsInput,
    Prisma.UserUncheckedCreateWithoutTransactionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTransactionsInput;
  upsert?: Prisma.UserUpsertWithoutTransactionsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutTransactionsInput,
      Prisma.UserUpdateWithoutTransactionsInput
    >,
    Prisma.UserUncheckedUpdateWithoutTransactionsInput
  >;
};

export type UserCreateNestedOneWithoutNotificationInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutNotificationInput,
    Prisma.UserUncheckedCreateWithoutNotificationInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotificationInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutNotificationNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutNotificationInput,
    Prisma.UserUncheckedCreateWithoutNotificationInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotificationInput;
  upsert?: Prisma.UserUpsertWithoutNotificationInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutNotificationInput,
      Prisma.UserUpdateWithoutNotificationInput
    >,
    Prisma.UserUncheckedUpdateWithoutNotificationInput
  >;
};

export type UserCreateNestedOneWithoutBanInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutBanInput, Prisma.UserUncheckedCreateWithoutBanInput>;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutBanInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutBanNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutBanInput, Prisma.UserUncheckedCreateWithoutBanInput>;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutBanInput;
  upsert?: Prisma.UserUpsertWithoutBanInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutBanInput, Prisma.UserUpdateWithoutBanInput>,
    Prisma.UserUncheckedUpdateWithoutBanInput
  >;
};

export type UserCreateWithoutAccountInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
  accountGroup?: Prisma.AccountGroupCreateNestedOneWithoutUsersInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutUserInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutUserInput;
  Notification?: Prisma.NotificationCreateNestedManyWithoutUserInput;
  ban?: Prisma.BanCreateNestedOneWithoutUserInput;
};

export type UserUncheckedCreateWithoutAccountInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  accountGroupId?: string | null;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutUserInput;
  investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutUserInput;
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput;
  ban?: Prisma.BanUncheckedCreateNestedOneWithoutUserInput;
};

export type UserCreateOrConnectWithoutAccountInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAccountInput,
    Prisma.UserUncheckedCreateWithoutAccountInput
  >;
};

export type UserUpsertWithoutAccountInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutAccountInput,
    Prisma.UserUncheckedUpdateWithoutAccountInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAccountInput,
    Prisma.UserUncheckedCreateWithoutAccountInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutAccountInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutAccountInput,
    Prisma.UserUncheckedUpdateWithoutAccountInput
  >;
};

export type UserUpdateWithoutAccountInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  accountGroup?: Prisma.AccountGroupUpdateOneWithoutUsersNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutUserNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutUserNestedInput;
  Notification?: Prisma.NotificationUpdateManyWithoutUserNestedInput;
  ban?: Prisma.BanUpdateOneWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutAccountInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  accountGroupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutUserNestedInput;
  investments?: Prisma.InvestmentUncheckedUpdateManyWithoutUserNestedInput;
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput;
  ban?: Prisma.BanUncheckedUpdateOneWithoutUserNestedInput;
};

export type UserCreateWithoutAccountGroupInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
  account?: Prisma.AccountCreateNestedOneWithoutUserInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutUserInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutUserInput;
  Notification?: Prisma.NotificationCreateNestedManyWithoutUserInput;
  ban?: Prisma.BanCreateNestedOneWithoutUserInput;
};

export type UserUncheckedCreateWithoutAccountGroupInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
  account?: Prisma.AccountUncheckedCreateNestedOneWithoutUserInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutUserInput;
  investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutUserInput;
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput;
  ban?: Prisma.BanUncheckedCreateNestedOneWithoutUserInput;
};

export type UserCreateOrConnectWithoutAccountGroupInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAccountGroupInput,
    Prisma.UserUncheckedCreateWithoutAccountGroupInput
  >;
};

export type UserCreateManyAccountGroupInputEnvelope = {
  data: Prisma.UserCreateManyAccountGroupInput | Prisma.UserCreateManyAccountGroupInput[];
};

export type UserUpsertWithWhereUniqueWithoutAccountGroupInput = {
  where: Prisma.UserWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutAccountGroupInput,
    Prisma.UserUncheckedUpdateWithoutAccountGroupInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAccountGroupInput,
    Prisma.UserUncheckedCreateWithoutAccountGroupInput
  >;
};

export type UserUpdateWithWhereUniqueWithoutAccountGroupInput = {
  where: Prisma.UserWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutAccountGroupInput,
    Prisma.UserUncheckedUpdateWithoutAccountGroupInput
  >;
};

export type UserUpdateManyWithWhereWithoutAccountGroupInput = {
  where: Prisma.UserScalarWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateManyMutationInput,
    Prisma.UserUncheckedUpdateManyWithoutAccountGroupInput
  >;
};

export type UserScalarWhereInput = {
  AND?: Prisma.UserScalarWhereInput | Prisma.UserScalarWhereInput[];
  OR?: Prisma.UserScalarWhereInput[];
  NOT?: Prisma.UserScalarWhereInput | Prisma.UserScalarWhereInput[];
  id?: Prisma.StringFilter<"User"> | string;
  name?: Prisma.StringFilter<"User"> | string;
  email?: Prisma.StringFilter<"User"> | string;
  password?: Prisma.StringFilter<"User"> | string;
  verified?: Prisma.BoolFilter<"User"> | boolean;
  role?: Prisma.EnumUserRoleFilter<"User"> | $Enums.UserRole;
  accountGroupId?: Prisma.StringNullableFilter<"User"> | string | null;
  image?: Prisma.StringNullableFilter<"User"> | string | null;
  phoneNumber?: Prisma.StringNullableFilter<"User"> | string | null;
  address?: Prisma.StringNullableFilter<"User"> | string | null;
  country?: Prisma.StringNullableFilter<"User"> | string | null;
  region?: Prisma.StringNullableFilter<"User"> | string | null;
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"User"> | Date | string;
  ipAddresses?: Prisma.JsonNullableFilter<"User">;
  devices?: Prisma.JsonNullableFilter<"User">;
  isBanned?: Prisma.BoolNullableFilter<"User"> | boolean | null;
};

export type UserCreateWithoutInvestmentsInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
  account?: Prisma.AccountCreateNestedOneWithoutUserInput;
  accountGroup?: Prisma.AccountGroupCreateNestedOneWithoutUsersInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutUserInput;
  Notification?: Prisma.NotificationCreateNestedManyWithoutUserInput;
  ban?: Prisma.BanCreateNestedOneWithoutUserInput;
};

export type UserUncheckedCreateWithoutInvestmentsInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  accountGroupId?: string | null;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
  account?: Prisma.AccountUncheckedCreateNestedOneWithoutUserInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutUserInput;
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput;
  ban?: Prisma.BanUncheckedCreateNestedOneWithoutUserInput;
};

export type UserCreateOrConnectWithoutInvestmentsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutInvestmentsInput,
    Prisma.UserUncheckedCreateWithoutInvestmentsInput
  >;
};

export type UserUpsertWithoutInvestmentsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutInvestmentsInput,
    Prisma.UserUncheckedUpdateWithoutInvestmentsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutInvestmentsInput,
    Prisma.UserUncheckedCreateWithoutInvestmentsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutInvestmentsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutInvestmentsInput,
    Prisma.UserUncheckedUpdateWithoutInvestmentsInput
  >;
};

export type UserUpdateWithoutInvestmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  account?: Prisma.AccountUpdateOneWithoutUserNestedInput;
  accountGroup?: Prisma.AccountGroupUpdateOneWithoutUsersNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutUserNestedInput;
  Notification?: Prisma.NotificationUpdateManyWithoutUserNestedInput;
  ban?: Prisma.BanUpdateOneWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutInvestmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  accountGroupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  account?: Prisma.AccountUncheckedUpdateOneWithoutUserNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutUserNestedInput;
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput;
  ban?: Prisma.BanUncheckedUpdateOneWithoutUserNestedInput;
};

export type UserCreateWithoutTransactionsInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
  account?: Prisma.AccountCreateNestedOneWithoutUserInput;
  accountGroup?: Prisma.AccountGroupCreateNestedOneWithoutUsersInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutUserInput;
  Notification?: Prisma.NotificationCreateNestedManyWithoutUserInput;
  ban?: Prisma.BanCreateNestedOneWithoutUserInput;
};

export type UserUncheckedCreateWithoutTransactionsInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  accountGroupId?: string | null;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
  account?: Prisma.AccountUncheckedCreateNestedOneWithoutUserInput;
  investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutUserInput;
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput;
  ban?: Prisma.BanUncheckedCreateNestedOneWithoutUserInput;
};

export type UserCreateOrConnectWithoutTransactionsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionsInput,
    Prisma.UserUncheckedCreateWithoutTransactionsInput
  >;
};

export type UserUpsertWithoutTransactionsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutTransactionsInput,
    Prisma.UserUncheckedUpdateWithoutTransactionsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionsInput,
    Prisma.UserUncheckedCreateWithoutTransactionsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutTransactionsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutTransactionsInput,
    Prisma.UserUncheckedUpdateWithoutTransactionsInput
  >;
};

export type UserUpdateWithoutTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  account?: Prisma.AccountUpdateOneWithoutUserNestedInput;
  accountGroup?: Prisma.AccountGroupUpdateOneWithoutUsersNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutUserNestedInput;
  Notification?: Prisma.NotificationUpdateManyWithoutUserNestedInput;
  ban?: Prisma.BanUpdateOneWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  accountGroupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  account?: Prisma.AccountUncheckedUpdateOneWithoutUserNestedInput;
  investments?: Prisma.InvestmentUncheckedUpdateManyWithoutUserNestedInput;
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput;
  ban?: Prisma.BanUncheckedUpdateOneWithoutUserNestedInput;
};

export type UserCreateWithoutNotificationInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
  account?: Prisma.AccountCreateNestedOneWithoutUserInput;
  accountGroup?: Prisma.AccountGroupCreateNestedOneWithoutUsersInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutUserInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutUserInput;
  ban?: Prisma.BanCreateNestedOneWithoutUserInput;
};

export type UserUncheckedCreateWithoutNotificationInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  accountGroupId?: string | null;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
  account?: Prisma.AccountUncheckedCreateNestedOneWithoutUserInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutUserInput;
  investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutUserInput;
  ban?: Prisma.BanUncheckedCreateNestedOneWithoutUserInput;
};

export type UserCreateOrConnectWithoutNotificationInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutNotificationInput,
    Prisma.UserUncheckedCreateWithoutNotificationInput
  >;
};

export type UserUpsertWithoutNotificationInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutNotificationInput,
    Prisma.UserUncheckedUpdateWithoutNotificationInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutNotificationInput,
    Prisma.UserUncheckedCreateWithoutNotificationInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutNotificationInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutNotificationInput,
    Prisma.UserUncheckedUpdateWithoutNotificationInput
  >;
};

export type UserUpdateWithoutNotificationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  account?: Prisma.AccountUpdateOneWithoutUserNestedInput;
  accountGroup?: Prisma.AccountGroupUpdateOneWithoutUsersNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutUserNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutUserNestedInput;
  ban?: Prisma.BanUpdateOneWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutNotificationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  accountGroupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  account?: Prisma.AccountUncheckedUpdateOneWithoutUserNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutUserNestedInput;
  investments?: Prisma.InvestmentUncheckedUpdateManyWithoutUserNestedInput;
  ban?: Prisma.BanUncheckedUpdateOneWithoutUserNestedInput;
};

export type UserCreateWithoutBanInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
  account?: Prisma.AccountCreateNestedOneWithoutUserInput;
  accountGroup?: Prisma.AccountGroupCreateNestedOneWithoutUsersInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutUserInput;
  investments?: Prisma.InvestmentCreateNestedManyWithoutUserInput;
  Notification?: Prisma.NotificationCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutBanInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  accountGroupId?: string | null;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
  account?: Prisma.AccountUncheckedCreateNestedOneWithoutUserInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutUserInput;
  investments?: Prisma.InvestmentUncheckedCreateNestedManyWithoutUserInput;
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutBanInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<Prisma.UserCreateWithoutBanInput, Prisma.UserUncheckedCreateWithoutBanInput>;
};

export type UserUpsertWithoutBanInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutBanInput, Prisma.UserUncheckedUpdateWithoutBanInput>;
  create: Prisma.XOR<Prisma.UserCreateWithoutBanInput, Prisma.UserUncheckedCreateWithoutBanInput>;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutBanInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<Prisma.UserUpdateWithoutBanInput, Prisma.UserUncheckedUpdateWithoutBanInput>;
};

export type UserUpdateWithoutBanInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  account?: Prisma.AccountUpdateOneWithoutUserNestedInput;
  accountGroup?: Prisma.AccountGroupUpdateOneWithoutUsersNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutUserNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutUserNestedInput;
  Notification?: Prisma.NotificationUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutBanInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  accountGroupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  account?: Prisma.AccountUncheckedUpdateOneWithoutUserNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutUserNestedInput;
  investments?: Prisma.InvestmentUncheckedUpdateManyWithoutUserNestedInput;
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateManyAccountGroupInput = {
  id?: string;
  name: string;
  email: string;
  password: string;
  verified?: boolean;
  role?: $Enums.UserRole;
  image?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  country?: string | null;
  region?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: boolean | null;
};

export type UserUpdateWithoutAccountGroupInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  account?: Prisma.AccountUpdateOneWithoutUserNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutUserNestedInput;
  investments?: Prisma.InvestmentUpdateManyWithoutUserNestedInput;
  Notification?: Prisma.NotificationUpdateManyWithoutUserNestedInput;
  ban?: Prisma.BanUpdateOneWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutAccountGroupInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: PrismaJson.IpAddresses | Prisma.NullableJsonNullValueInput;
  devices?: unknown | Prisma.NullableJsonNullValueInput;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  account?: Prisma.AccountUncheckedUpdateOneWithoutUserNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutUserNestedInput;
  investments?: Prisma.InvestmentUncheckedUpdateManyWithoutUserNestedInput;
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput;
  ban?: Prisma.BanUncheckedUpdateOneWithoutUserNestedInput;
};

export type UserUncheckedUpdateManyWithoutAccountGroupInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  password?: Prisma.StringFieldUpdateOperationsInput | string;
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  ipAddresses?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  devices?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  isBanned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
};

/**
 * Count Type UserCountOutputType
 */

export type UserCountOutputType = {
  transactions: number;
  investments: number;
  Notification: number;
};

export type UserCountOutputTypeSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  transactions?: boolean | UserCountOutputTypeCountTransactionsArgs;
  investments?: boolean | UserCountOutputTypeCountInvestmentsArgs;
  Notification?: boolean | UserCountOutputTypeCountNotificationArgs;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the UserCountOutputType
   */
  select?: Prisma.UserCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountTransactionsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.TransactionWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountInvestmentsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.InvestmentWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountNotificationArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.NotificationWhereInput;
};

export type UserSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    email?: boolean;
    password?: boolean;
    verified?: boolean;
    role?: boolean;
    accountGroupId?: boolean;
    image?: boolean;
    phoneNumber?: boolean;
    address?: boolean;
    country?: boolean;
    region?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    ipAddresses?: boolean;
    devices?: boolean;
    isBanned?: boolean;
    account?: boolean | Prisma.User$accountArgs<ExtArgs>;
    accountGroup?: boolean | Prisma.User$accountGroupArgs<ExtArgs>;
    transactions?: boolean | Prisma.User$transactionsArgs<ExtArgs>;
    investments?: boolean | Prisma.User$investmentsArgs<ExtArgs>;
    Notification?: boolean | Prisma.User$NotificationArgs<ExtArgs>;
    ban?: boolean | Prisma.User$banArgs<ExtArgs>;
    _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["user"]
>;

export type UserSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    email?: boolean;
    password?: boolean;
    verified?: boolean;
    role?: boolean;
    accountGroupId?: boolean;
    image?: boolean;
    phoneNumber?: boolean;
    address?: boolean;
    country?: boolean;
    region?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    ipAddresses?: boolean;
    devices?: boolean;
    isBanned?: boolean;
    accountGroup?: boolean | Prisma.User$accountGroupArgs<ExtArgs>;
  },
  ExtArgs["result"]["user"]
>;

export type UserSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    email?: boolean;
    password?: boolean;
    verified?: boolean;
    role?: boolean;
    accountGroupId?: boolean;
    image?: boolean;
    phoneNumber?: boolean;
    address?: boolean;
    country?: boolean;
    region?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    ipAddresses?: boolean;
    devices?: boolean;
    isBanned?: boolean;
    accountGroup?: boolean | Prisma.User$accountGroupArgs<ExtArgs>;
  },
  ExtArgs["result"]["user"]
>;

export type UserSelectScalar = {
  id?: boolean;
  name?: boolean;
  email?: boolean;
  password?: boolean;
  verified?: boolean;
  role?: boolean;
  accountGroupId?: boolean;
  image?: boolean;
  phoneNumber?: boolean;
  address?: boolean;
  country?: boolean;
  region?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
  ipAddresses?: boolean;
  devices?: boolean;
  isBanned?: boolean;
};

export type UserOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "name"
  | "email"
  | "password"
  | "verified"
  | "role"
  | "accountGroupId"
  | "image"
  | "phoneNumber"
  | "address"
  | "country"
  | "region"
  | "createdAt"
  | "updatedAt"
  | "ipAddresses"
  | "devices"
  | "isBanned",
  ExtArgs["result"]["user"]
>;
export type UserInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  account?: boolean | Prisma.User$accountArgs<ExtArgs>;
  accountGroup?: boolean | Prisma.User$accountGroupArgs<ExtArgs>;
  transactions?: boolean | Prisma.User$transactionsArgs<ExtArgs>;
  investments?: boolean | Prisma.User$investmentsArgs<ExtArgs>;
  Notification?: boolean | Prisma.User$NotificationArgs<ExtArgs>;
  ban?: boolean | Prisma.User$banArgs<ExtArgs>;
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>;
};
export type UserIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  accountGroup?: boolean | Prisma.User$accountGroupArgs<ExtArgs>;
};
export type UserIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  accountGroup?: boolean | Prisma.User$accountGroupArgs<ExtArgs>;
};

export type $UserPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "User";
  objects: {
    account: Prisma.$AccountPayload<ExtArgs> | null;
    accountGroup: Prisma.$AccountGroupPayload<ExtArgs> | null;
    transactions: Prisma.$TransactionPayload<ExtArgs>[];
    investments: Prisma.$InvestmentPayload<ExtArgs>[];
    Notification: Prisma.$NotificationPayload<ExtArgs>[];
    ban: Prisma.$BanPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      name: string;
      email: string;
      password: string;
      verified: boolean;
      role: $Enums.UserRole;
      accountGroupId: string | null;
      image: string | null;
      phoneNumber: string | null;
      address: string | null;
      country: string | null;
      region: string | null;
      createdAt: Date;
      updatedAt: Date;
      /**
       * [IpAddresses]
       */
      ipAddresses: PrismaJson.IpAddresses | null;
      devices: unknown | null;
      isBanned: boolean | null;
    },
    ExtArgs["result"]["user"]
  >;
  composites: {};
};

export type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$UserPayload, S>;

export type UserCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<UserFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: UserCountAggregateInputType | true;
};

export interface UserDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>["model"]["User"]; meta: { name: "User" } };
  /**
   * Find zero or one User that matches the filter.
   * @param {UserFindUniqueArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserFindUniqueArgs>(
    args: Prisma.SelectSubset<T, UserFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one User that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first User that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserFindFirstArgs>(
    args?: Prisma.SelectSubset<T, UserFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first User that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more Users that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Users
   * const users = await prisma.user.findMany()
   *
   * // Get first 10 Users
   * const users = await prisma.user.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
   *
   */
  findMany<T extends UserFindManyArgs>(
    args?: Prisma.SelectSubset<T, UserFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
  >;

  /**
   * Create a User.
   * @param {UserCreateArgs} args - Arguments to create a User.
   * @example
   * // Create one User
   * const User = await prisma.user.create({
   *   data: {
   *     // ... data to create a User
   *   }
   * })
   *
   */
  create<T extends UserCreateArgs>(
    args: Prisma.SelectSubset<T, UserCreateArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many Users.
   * @param {UserCreateManyArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends UserCreateManyArgs>(
    args?: Prisma.SelectSubset<T, UserCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many Users and returns the data saved in the database.
   * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Users and only return the `id`
   * const userWithIdOnly = await prisma.user.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends UserCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a User.
   * @param {UserDeleteArgs} args - Arguments to delete one User.
   * @example
   * // Delete one User
   * const User = await prisma.user.delete({
   *   where: {
   *     // ... filter to delete one User
   *   }
   * })
   *
   */
  delete<T extends UserDeleteArgs>(
    args: Prisma.SelectSubset<T, UserDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one User.
   * @param {UserUpdateArgs} args - Arguments to update one User.
   * @example
   * // Update one User
   * const user = await prisma.user.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends UserUpdateArgs>(
    args: Prisma.SelectSubset<T, UserUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more Users.
   * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
   * @example
   * // Delete a few Users
   * const { count } = await prisma.user.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends UserDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, UserDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends UserUpdateManyArgs>(
    args: Prisma.SelectSubset<T, UserUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Users and returns the data updated in the database.
   * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Users and only return the `id`
   * const userWithIdOnly = await prisma.user.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one User.
   * @param {UserUpsertArgs} args - Arguments to update or create a User.
   * @example
   * // Update or create a User
   * const user = await prisma.user.upsert({
   *   create: {
   *     // ... data to create a User
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the User we want to update
   *   }
   * })
   */
  upsert<T extends UserUpsertArgs>(
    args: Prisma.SelectSubset<T, UserUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserCountArgs} args - Arguments to filter Users to count.
   * @example
   * // Count the number of Users
   * const count = await prisma.user.count({
   *   where: {
   *     // ... the filter for the Users we want to count
   *   }
   * })
   **/
  count<T extends UserCountArgs>(
    args?: Prisma.Subset<T, UserCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], UserCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends UserAggregateArgs>(
    args: Prisma.Subset<T, UserAggregateArgs>
  ): Prisma.PrismaPromise<GetUserAggregateType<T>>;

  /**
   * Group by User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends UserGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserGroupByArgs["orderBy"] }
      : { orderBy?: UserGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for User.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  account<T extends Prisma.User$accountArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$accountArgs<ExtArgs>>
  ): Prisma.Prisma__AccountClient<
    runtime.Types.Result.GetResult<
      Prisma.$AccountPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  accountGroup<T extends Prisma.User$accountGroupArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$accountGroupArgs<ExtArgs>>
  ): Prisma.Prisma__AccountGroupClient<
    runtime.Types.Result.GetResult<
      Prisma.$AccountGroupPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  transactions<T extends Prisma.User$transactionsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$transactionsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TransactionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  investments<T extends Prisma.User$investmentsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$investmentsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InvestmentPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  Notification<T extends Prisma.User$NotificationArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$NotificationArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$NotificationPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  ban<T extends Prisma.User$banArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$banArgs<ExtArgs>>
  ): Prisma.Prisma__BanClient<
    runtime.Types.Result.GetResult<
      Prisma.$BanPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the User model
 */
export interface UserFieldRefs {
  readonly id: Prisma.FieldRef<"User", "String">;
  readonly name: Prisma.FieldRef<"User", "String">;
  readonly email: Prisma.FieldRef<"User", "String">;
  readonly password: Prisma.FieldRef<"User", "String">;
  readonly verified: Prisma.FieldRef<"User", "Boolean">;
  readonly role: Prisma.FieldRef<"User", "UserRole">;
  readonly accountGroupId: Prisma.FieldRef<"User", "String">;
  readonly image: Prisma.FieldRef<"User", "String">;
  readonly phoneNumber: Prisma.FieldRef<"User", "String">;
  readonly address: Prisma.FieldRef<"User", "String">;
  readonly country: Prisma.FieldRef<"User", "String">;
  readonly region: Prisma.FieldRef<"User", "String">;
  readonly createdAt: Prisma.FieldRef<"User", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"User", "DateTime">;
  readonly ipAddresses: Prisma.FieldRef<"User", "Json">;
  readonly devices: Prisma.FieldRef<"User", "Json">;
  readonly isBanned: Prisma.FieldRef<"User", "Boolean">;
}

// Custom InputTypes
/**
 * User findUnique
 */
export type UserFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput;
};

/**
 * User findUniqueOrThrow
 */
export type UserFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput;
};

/**
 * User findFirst
 */
export type UserFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Users.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[];
};

/**
 * User findFirstOrThrow
 */
export type UserFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Users.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[];
};

/**
 * User findMany
 */
export type UserFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which Users to fetch.
   */
  where?: Prisma.UserWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Users.
   */
  cursor?: Prisma.UserWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Users.
   */
  skip?: number;
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[];
};

/**
 * User create
 */
export type UserCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * The data needed to create a User.
   */
  data: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>;
};

/**
 * User createMany
 */
export type UserCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[];
};

/**
 * User createManyAndReturn
 */
export type UserCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[];
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * User update
 */
export type UserUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * The data needed to update a User.
   */
  data: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>;
  /**
   * Choose, which User to update.
   */
  where: Prisma.UserWhereUniqueInput;
};

/**
 * User updateMany
 */
export type UserUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>;
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput;
  /**
   * Limit how many Users to update.
   */
  limit?: number;
};

/**
 * User updateManyAndReturn
 */
export type UserUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>;
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput;
  /**
   * Limit how many Users to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * User upsert
 */
export type UserUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * The filter to search for the User to update in case it exists.
   */
  where: Prisma.UserWhereUniqueInput;
  /**
   * In case the User found by the `where` argument doesn't exist, create a new User with this data.
   */
  create: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>;
  /**
   * In case the User was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>;
};

/**
 * User delete
 */
export type UserDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter which User to delete.
   */
  where: Prisma.UserWhereUniqueInput;
};

/**
 * User deleteMany
 */
export type UserDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which Users to delete
   */
  where?: Prisma.UserWhereInput;
  /**
   * Limit how many Users to delete.
   */
  limit?: number;
};

/**
 * User.account
 */
export type User$accountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Account
   */
  select?: Prisma.AccountSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Account
   */
  omit?: Prisma.AccountOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountInclude<ExtArgs> | null;
  where?: Prisma.AccountWhereInput;
};

/**
 * User.accountGroup
 */
export type User$accountGroupArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AccountGroup
   */
  select?: Prisma.AccountGroupSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AccountGroup
   */
  omit?: Prisma.AccountGroupOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountGroupInclude<ExtArgs> | null;
  where?: Prisma.AccountGroupWhereInput;
};

/**
 * User.transactions
 */
export type User$transactionsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Transaction
   */
  select?: Prisma.TransactionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Transaction
   */
  omit?: Prisma.TransactionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TransactionInclude<ExtArgs> | null;
  where?: Prisma.TransactionWhereInput;
  orderBy?:
    | Prisma.TransactionOrderByWithRelationInput
    | Prisma.TransactionOrderByWithRelationInput[];
  cursor?: Prisma.TransactionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.TransactionScalarFieldEnum | Prisma.TransactionScalarFieldEnum[];
};

/**
 * User.investments
 */
export type User$investmentsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Investment
   */
  select?: Prisma.InvestmentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Investment
   */
  omit?: Prisma.InvestmentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvestmentInclude<ExtArgs> | null;
  where?: Prisma.InvestmentWhereInput;
  orderBy?: Prisma.InvestmentOrderByWithRelationInput | Prisma.InvestmentOrderByWithRelationInput[];
  cursor?: Prisma.InvestmentWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.InvestmentScalarFieldEnum | Prisma.InvestmentScalarFieldEnum[];
};

/**
 * User.Notification
 */
export type User$NotificationArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Notification
   */
  select?: Prisma.NotificationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Notification
   */
  omit?: Prisma.NotificationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NotificationInclude<ExtArgs> | null;
  where?: Prisma.NotificationWhereInput;
  orderBy?:
    | Prisma.NotificationOrderByWithRelationInput
    | Prisma.NotificationOrderByWithRelationInput[];
  cursor?: Prisma.NotificationWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.NotificationScalarFieldEnum | Prisma.NotificationScalarFieldEnum[];
};

/**
 * User.ban
 */
export type User$banArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Ban
   */
  select?: Prisma.BanSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Ban
   */
  omit?: Prisma.BanOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BanInclude<ExtArgs> | null;
  where?: Prisma.BanWhereInput;
};

/**
 * User without action
 */
export type UserDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
};
